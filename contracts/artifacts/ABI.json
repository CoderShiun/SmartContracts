{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"g√∂rli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"functionDebugData": {},
			"generatedSources": [],
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b50610163806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063e21232e51461003b578063fb4040de14610059575b600080fd5b610043610077565b60405161005091906100ed565b60405180910390f35b61006161009e565b60405161006e91906100ed565b60405180910390f35b60006040518060600160405280602581526020016101096025913980519060200120905090565b6000803090506306552ff360e01b91505090565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6100e7816100b2565b82525050565b600060208201905061010260008301846100de565b9291505056fe696e697428616464726573732c616464726573732c616464726573732c6164647265737329a26469706673582212205758d2b4360d6e0e1edb8f34a2952567d6921899369f6705cd6c6ab0e229170064736f6c634300080f0033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x163 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE21232E5 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xFB4040DE EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0xED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0xED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 PUSH1 0x25 SWAP2 CODECOPY DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 ADDRESS SWAP1 POP PUSH4 0x6552FF3 PUSH1 0xE0 SHL SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE7 DUP2 PUSH2 0xB2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x102 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID PUSH10 0x6E697428616464726573 PUSH20 0x2C616464726573732C616464726573732C616464 PUSH19 0x65737329A26469706673582212205758D2B436 0xD PUSH15 0xE1EDB8F34A2952567D6921899369F PUSH8 0x5CD6C6AB0E22917 STOP PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
			"sourceMap": "189:398:0:-:0;;;;;;;;;;;;;;;;;;;"
		},
		"deployedBytecode": {
			"functionDebugData": {
				"@getCodeByKeccak_30": {
					"entryPoint": 119,
					"id": 30,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"@getCodeBySelector_50": {
					"entryPoint": 158,
					"id": 50,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
					"entryPoint": 222,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
					"entryPoint": 237,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"cleanup_t_bytes4": {
					"entryPoint": 178,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				}
			},
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:504:2",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "51:105:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "61:89:2",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "76:5:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "83:66:2",
														"type": "",
														"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "72:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "72:78:2"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "61:7:2"
												}
											]
										}
									]
								},
								"name": "cleanup_t_bytes4",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "33:5:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "43:7:2",
										"type": ""
									}
								],
								"src": "7:149:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "225:52:2",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "242:3:2"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "264:5:2"
															}
														],
														"functionName": {
															"name": "cleanup_t_bytes4",
															"nodeType": "YulIdentifier",
															"src": "247:16:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "247:23:2"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "235:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "235:36:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "235:36:2"
										}
									]
								},
								"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "213:5:2",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "220:3:2",
										"type": ""
									}
								],
								"src": "162:115:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "379:122:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "389:26:2",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "401:9:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "412:2:2",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "397:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "397:18:2"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "389:4:2"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "467:6:2"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "480:9:2"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "491:1:2",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "476:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "476:17:2"
													}
												],
												"functionName": {
													"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
													"nodeType": "YulIdentifier",
													"src": "425:41:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "425:69:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "425:69:2"
										}
									]
								},
								"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "351:9:2",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "363:6:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "374:4:2",
										"type": ""
									}
								],
								"src": "283:218:2"
							}
						]
					},
					"contents": "{\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
					"id": 2,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063e21232e51461003b578063fb4040de14610059575b600080fd5b610043610077565b60405161005091906100ed565b60405180910390f35b61006161009e565b60405161006e91906100ed565b60405180910390f35b60006040518060600160405280602581526020016101096025913980519060200120905090565b6000803090506306552ff360e01b91505090565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6100e7816100b2565b82525050565b600060208201905061010260008301846100de565b9291505056fe696e697428616464726573732c616464726573732c616464726573732c6164647265737329a26469706673582212205758d2b4360d6e0e1edb8f34a2952567d6921899369f6705cd6c6ab0e229170064736f6c634300080f0033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE21232E5 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xFB4040DE EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0xED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0xED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x109 PUSH1 0x25 SWAP2 CODECOPY DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 ADDRESS SWAP1 POP PUSH4 0x6552FF3 PUSH1 0xE0 SHL SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE7 DUP2 PUSH2 0xB2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x102 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID PUSH10 0x6E697428616464726573 PUSH20 0x2C616464726573732C616464726573732C616464 PUSH19 0x65737329A26469706673582212205758D2B436 0xD PUSH15 0xE1EDB8F34A2952567D6921899369F PUSH8 0x5CD6C6AB0E22917 STOP PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
			"sourceMap": "189:398:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;287:146;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;441:143;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;287:146;334:6;377:46;;;;;;;;;;;;;;;;;367:57;;;;;;353:72;;287:146;:::o;441:143::-;490:6;509:9;534:4;509:31;;558:18;;;551:25;;;441:143;:::o;7:149:2:-;43:7;83:66;76:5;72:78;61:89;;7:149;;;:::o;162:115::-;247:23;264:5;247:23;:::i;:::-;242:3;235:36;162:115;;:::o;283:218::-;374:4;412:2;401:9;397:18;389:26;;425:69;491:1;480:9;476:17;467:6;425:69;:::i;:::-;283:218;;;;:::o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "71000",
				"executionCost": "123",
				"totalCost": "71123"
			},
			"external": {
				"getCodeByKeccak()": "infinite",
				"getCodeBySelector()": "361"
			}
		},
		"methodIdentifiers": {
			"getCodeByKeccak()": "e21232e5",
			"getCodeBySelector()": "fb4040de"
		}
	},
	"abi": [
		{
			"inputs": [],
			"name": "getCodeByKeccak",
			"outputs": [
				{
					"internalType": "bytes4",
					"name": "",
					"type": "bytes4"
				}
			],
			"stateMutability": "pure",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "getCodeBySelector",
			"outputs": [
				{
					"internalType": "bytes4",
					"name": "",
					"type": "bytes4"
				}
			],
			"stateMutability": "view",
			"type": "function"
		}
	]
}